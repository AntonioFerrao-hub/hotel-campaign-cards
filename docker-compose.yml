# ========================================
# DOCKER COMPOSE - Hotel Campaign Cards
# Sistema de Gerenciamento de Campanhas
# ========================================

version: '3.8'

services:
  # ========================================
  # APLICAÇÃO WEB (PRODUÇÃO)
  # ========================================
  web:
    build:
      context: .
      target: production
      dockerfile: Dockerfile
    container_name: hotel-campaign-cards-web
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - hotel-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ========================================
  # APLICAÇÃO DESENVOLVIMENTO
  # ========================================
  web-dev:
    build:
      context: .
      target: development
      dockerfile: Dockerfile
    container_name: hotel-campaign-cards-dev
    ports:
      - "8181:8181"
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - hotel-network
    profiles:
      - development

  # ========================================
  # NGINX REVERSE PROXY (OPCIONAL)
  # ========================================
  nginx:
    image: nginx:alpine
    container_name: hotel-nginx-proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - hotel-network
    profiles:
      - proxy

  # ========================================
  # SUPABASE LOCAL (OPCIONAL)
  # ========================================
  supabase:
    image: supabase/postgres:15.1.0.147
    container_name: hotel-supabase-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - supabase_data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - hotel-network
    profiles:
      - database

# ========================================
# VOLUMES
# ========================================
volumes:
  supabase_data:
    driver: local

# ========================================
# NETWORKS
# ========================================
networks:
  hotel-network:
    driver: bridge

# ========================================
# COMANDOS ÚTEIS:
# 
# Produção:
# docker-compose up web
# 
# Desenvolvimento:
# docker-compose --profile development up web-dev
# 
# Com proxy:
# docker-compose --profile proxy up
# 
# Com banco local:
# docker-compose --profile database up supabase
# 
# Tudo junto (dev + db):
# docker-compose --profile development --profile database up
# 
# Build e up:
# docker-compose up --build
# 
# Logs:
# docker-compose logs -f web
# 
# Parar tudo:
# docker-compose down
# 
# Limpar volumes:
# docker-compose down -v
# ========================================